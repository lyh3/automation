@using IntelDCGSpsWebService.Models;

@model HealthEventViewModel

@{
    ViewBag.Title = "EventDataDecode";
    Layout = "~/Views/Shared/_Layout.cshtml";

    <h3 align="left" style="color:dodgerblue;">@Model.Title</h3><hr />
}

<table style="width:100%;background-color:transparent;border:1px;border-radius:5px;">
    <tr>
        @*<td>
            <table style="background-color: rgb(41, 42, 43); border-radius: 5px;">
                <tr><td style="height:10px;"/></tr>
                <tr>
                    <td style="width:15px;" />
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-default type=" button" data-toggle="dropdown"><span>Select Platform(release)</span> <span class="caret"></span></button>
                            <div class="dropdown-menu dropdown-defaults" style="background-color:black;opacity:0.8;margin-left:-30px;">
                                <ul id="decodeList" style="background-color:trasparent;color:white;">
                                    @*{% for key, value in DataModel.DecodeJsonDictionary %}
                                <li>
                                    <input type="radio" name="decodeitem" data-value="{{value}}" value="{{key}}" />
                                    <span data-value="{{value}}">{{key}}&nbsp;</span>
                                </li>
                                {% endfor %}
                                </ul>
                            </div>
                        </div>
                    </td>
                    <td>&nbsp;</td>
                    <td>
                         <span id="platform" class="badge">{{DataModel.SelectedDecode}}</span>
                    </td>
                    <td style="width:15px;" />
                </tr>
                <tr><td style="height:10px;" /></tr>
            </table>
        </td>*@
        <td>
            <table style="width: 100%; background-color:rgb(41, 42, 43); border: 1px; border-radius: 5px;">
                <tr><td style="height:10px;" /></tr>
                <tr>
                    <td style="width:15px;" />
                    <td> 
                        <input id="healtheventdata" type="text" class="form-control" placeholder="Enter event data, e.g. A01301" name="add-Name" id="event-data" style="text-align:center;background-color:transparent;color:limegreen;" onkeypress="return onEventDataKeypress(event)">
                    </td>
                    <td>&nbsp;</td>
                    <td>
                        <button id="decode" class="glyphicon glyphicon-transfer btn btn-primary color-gold" onclick="onDecodeClick()">&nbsp;Decode&nbsp;</button>
                    </td>
                </tr>
                <tr><td style="height:10px;" /></tr>
            </table>
        </td>
    </tr>
</table>
<div id="divHealthEvent" class="row">
</div>

<script type="text/javascript">

    function resetNotification() {
       $('#divErrorMessage').attr('style', 'display:none;');
    }
    function displayErrorMessage(message) {
        if (message != '') {
            var divError = $('#divHealthEvent');
            divError.attr('style', 'visibility:visible;');
            divError.innerHTML = message;
        }
    }
    function onDecodeClick() {
        resetNotification();
        var divHealthEvent = document.getElementById('divHealthEvent');
        divHealthEvent.innerHTML = '';
        $.ajax({
            url: '/SpsTools/DecodeHealthEvent',
            dataType: 'json',
            type: "POST",
            cache: false,
            data: {
                JsonString: $('#healtheventdata').val()
                //"model": model.toJSON()
            },
            success: function (data) {
                if (data['error'] == '') {
                    divHealthEvent.innerHTML = data['html'];
                } else {
                    displayErrorMessage(data['error']);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log('xhr.status : ' + xhr.status);
            }
        });
    };
    function onEventDataKeypress(e) {
        if (e.keyCode == 13) {
            onDecodeClick();
        }
        return e.keyCode;
    };
</script>
